version: '3'

volumes:
  app_data:
    name: app_data
  app_broker:
    name: app_broker

services:
  web:
    &web
    image: django_main:production
    build:
      dockerfile: Dockerfile.prod
    command: /home/app/docker/start.sh server
    depends_on:
      - db
    restart: on-failure
    ports:
      - 8000:8000
    env_file:
      - .env.prod
    links:
      - db:db
    networks:
      - postgres
      - djangonetwork
  db:
    image: postgres:15-alpine
    restart: on-failure
    env_file:
      - .env.db
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5438:5432"
    networks:
      postgres:
        aliases:
          - db
    volumes:
      - app_data:/var/lib/postgresql/data/

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: on-failure
    env_file:
      - .env.pgadmin
    volumes:
      - app_data:/var/lib/pgadmin/data
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      postgres:
        aliases:
          - pgadmin
  redis:
    image: redis:7.0.7-alpine
    command: redis-server --appendonly yes
    volumes:
      - app_broker:/var/lib/redis/data

  celery:
    <<: *web
    depends_on:
      - web
      - db
      - redis
    ports:
      - 8001:8000
    command: /home/app/docker/start.sh  worker

  beat:
    <<: *web
    depends_on:
      - web
      - db
      - redis
    ports:
      - 8002:8000
    command: /home/app/docker/start.sh  beat
  # nginx:
  #   build: ./nginx
  #   volumes:
  #     - static_volume:/home/app/web/static
  #     - media_volume:/home/app/web/media
  #   ports:
  #     - 1337:80
  #   links:
  #     - web:web
  #   restart: on-failure
  #   depends_on:
  #     - web
  #   networks:
  #     djangonetwork:
  #       aliases:
  #         - nginx

networks:
  postgres:
    driver: bridge
  djangonetwork:
    driver: bridge
